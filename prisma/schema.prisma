generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model File {
  id       String     @id @default(uuid())
  name     String // 파일 이름
  type     FileType // 파일 타입 (IMAGE/VIDEO)
  status   FileStatus // 파일 상태
  mimeType String // MIME 타입
  fileSize BigInt // 파일 크기 (bytes)
  fileHash String // 파일 고유 해시값 (중복 방지용)

  // 미디어 메타데이터
  width    Int? // 이미지/비디오 너비 (픽셀)
  height   Int? // 이미지/비디오 높이 (픽셀)
  duration Float? // 비디오 길이 (초)
  encoding String? // 파일 인코딩 정보
  metadata Json? // 추가 메타데이터 (유연성 제공)

  // 경로 관련
  year     Int // 업로드 연도
  month    Int // 업로드 월 (1~12)
  branchId String // 업로드 지점 ID
  branch   Branch @relation(fields: [branchId], references: [id])

  // 스토리지 정보
  storageInfo StorageInfo? // 파일의 스토리지 위치 및 세부 정보

  // 보안 관련
  ownerId              String? // 소유자 ID (권한 관리)
  accessToken          String?         @unique // 임시 접근 토큰
  accessTokenExpiresAt DateTime? // 접근 토큰 만료 시간
  expiresAt            DateTime? // 다운로드 만료 시간
  accessCount          Int             @default(0) // 접근 횟수
  accessLogs           FileAccessLog[] // 파일 접근 로그

  // 편집 관련
  version        Int           @default(1) // 파일 버전 (수정 시 증가)
  originalFileId String? // 원본 파일 ID (편집된 경우)
  originalFile   File?         @relation("FileEdits", fields: [originalFileId], references: [id])
  editedFiles    File[]        @relation("FileEdits") // 수정된 파일 목록
  editHistory    EditHistory[] // 수정 이력

  // 처리 관련
  processingStatus ProcessingStatus? // 처리 상태 (예: 변환 중, 완료)
  errorDetails     Json? // 에러 발생 시 상세 정보 저장

  // 시스템 필드
  createdAt DateTime  @default(now()) // 생성 시간
  updatedAt DateTime  @updatedAt // 마지막 업데이트 시간
  deletedAt DateTime? // 소프트 삭제 시간 (삭제된 경우만 기록)

  // 인덱스 및 제약 조건
  @@index([year, month, branchId]) // 파일 탐색 최적화
  @@index([ownerId]) // 소유자별 조회 최적화
  @@index([type, status]) // 타입 및 상태별 조회
  @@index([expiresAt]) // 만료 시간별 조회
}

model StorageInfo {
  id              String      @id @default(uuid())
  fileId          String      @unique // 해당 파일의 스토리지 정보
  file            File        @relation(fields: [fileId], references: [id])
  storageType     StorageType // 스토리지 종류 (AWS, Google 등)
  storageFileId   String // 클라우드 스토리지에서의 파일 ID
  storageUrl      String? // 파일에 직접 접근 가능한 URL
  storageMetadata Json? // 추가 스토리지 메타데이터
  isActive        Boolean     @default(true) // 활성화 상태
  createdAt       DateTime    @default(now()) // 스토리지 생성 시간
  lastCheckedAt   DateTime? // 마지막 무결성 검사 시간

  // 복합 유니크 제약: 특정 스토리지에서 중복된 파일 방지
  @@unique([storageType, storageFileId])
}

model Branch {
  id        String       @id @default(uuid())
  name      String // 지점명
  code      String       @unique // 지점 코드
  files     File[] // 해당 지점에 업로드된 파일 목록
  region    String? // 지역 정보
  timezone  String? // 타임존
  status    BranchStatus @default(ACTIVE) // 지점 상태 (활성, 비활성 등)
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
}

model FileAccessLog {
  id         String     @id @default(uuid())
  fileId     String // 접근된 파일 ID
  file       File       @relation(fields: [fileId], references: [id])
  ipAddress  String // 접근 IP 주소
  userAgent  String? // 사용자 에이전트 정보
  timestamp  DateTime   @default(now()) // 접근 시간
  accessType AccessType // 접근 유형 (보기, 다운로드, 편집 등)
  statusCode Int // HTTP 상태 코드
  country    String? // IP 기반 국가 정보

  @@index([fileId, timestamp]) // 파일별 시간순 조회
}

model EditHistory {
  id            String   @id @default(uuid())
  fileId        String // 수정된 파일 ID
  file          File     @relation(fields: [fileId], references: [id])
  editType      String // 수정 유형 (예: "Crop", "Resize")
  editedBy      String? // 수정자 ID (없으면 시스템 수정)
  editedAt      DateTime @default(now()) // 수정 시간
  changes       Json? // 변경 내용 (유연한 형식)
  systemVersion String? // 편집 당시 시스템 버전
  duration      Int? // 편집 소요 시간 (초)

  @@index([fileId, editedAt]) // 파일별 수정 기록 조회
}

enum FileType {
  IMAGE
  VIDEO
}

enum FileStatus {
  UPLOADING
  PROCESSING
  COMPLETE
  FAILED
  DELETED
}

enum StorageType {
  AWS
  GOOGLE
  AZURE
  LOCAL
}

enum ProcessingStatus {
  QUEUED
  OPTIMIZING
  TRANSCODING
  ANALYZING
  COMPLETED
  ERROR
}

enum AccessType {
  VIEW
  DOWNLOAD
  EDIT
  SHARE
}

enum BranchStatus {
  ACTIVE
  INACTIVE
  SUSPENDED
}
